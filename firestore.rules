rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    /**
     * Accountコレクション
     */
    match /NotaApp/v0/Account/{docId} {
      /**
       * 自身のAccountデータの場合のみ許可
       */
      function isOwnAccountResource(uid) {
        return (request.auth != null && uid == request.auth.uid);
      }

      allow get,list: if resource.data.status == 'active';
      allow create: if isOwnAccountResource(docId) && (
        // フィールドチェック
        request.resource.data.keys().hasAll(['uid', 'displayName', 'status', 'createdAt', 'updatedAt'])
        // uidフィールドの値チェック
        && request.resource.data.uid == request.auth.uid
        // displayNameフィールドの型と値チェック
        && request.resource.data.displayName is string && request.resource.data.displayName.size() <= 20
        // statusフィールドの値チェック
        && request.resource.data.status == 'active'
        // createdAtフィールドの型チェック
        && request.resource.data.createdAt is timestamp
        // updatedAtフィールドの型チェック
        && request.resource.data.updatedAt is timestamp
      );
      allow update: if isOwnAccountResource(docId) && (
        // updatedAtフィールドがあるかのチェック (必須)
        request.resource.data.keys().hasAll(['updatedAt'])
        // displayNameフィールドの型と値チェック
        && request.resource.data.displayName is string && request.resource.data.displayName.size() <= 20
        // updatedAtフィールドの型チェック
        && request.resource.data.updatedAt is timestamp
      );
      allow delete: if false;
    }
  }
}
